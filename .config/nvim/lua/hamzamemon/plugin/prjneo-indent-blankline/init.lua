local status_ok, indent_blankline = pcall(require, "indent_blankline")
if not status_ok then return end

indent_blankline.setup {
    char = '│',
    char_blankline = '',
    char_list = {},
    char_list_blankline = [[]],
    char_highlight_list = [[]],
    space_char_blankline = ' ',
    space_char_highlight_list = [[]],
    space_char_blankline_highlight_list = [[]],
    use_treesitter = true,
    indent_level = 10,
    max_indent_increase = 10,
    show_first_indent_level = true,
    show_trailing_blankline_indent = true,
    show_end_of_line = true,
    show_foldtext = true,
    enabled = true,
    disable_with_nolist = false,
    filetype = [[]],
    filetype_exclude = [[
        "lspinfo",
        "packer",
        "checkhealth",
        "help",
        "man",
        "NvimTree",
        "Trouble",
        "",
    ]],
    buftype_exclude = [[
        'terminal',
        'nofile',
        'quickfix',
        'prompt',
    ]],
    bufname_exclude = [[]],
    strict_tabs = false,
    show_current_context = true,
    show_current_context_start = true,
    show_current_context_start = true,
    context_char = '│',
    context_char_blankline = '',
    context_char_list = [[]],
    context_char_list = [[]],
    context_highlight_list = [[]],
    char_priority = 1,
    context_start_priority = 10000,
    context_patterns = [[
        "class",
        "return",
        "function",
        "method",
        "^if",
        "^while",
        "jsx_element",
        "^for",
        "^object",
        "^table",
        "block",
        "arguments",
        "if_statement",
        "else_clause",
        "jsx_element",
        "jsx_self_closing_element",
        "try_statement",
        "catch_clause",
        "import_statement",
        "operation_type",
    ]],
    use_treesitter_scope = true,
    context_pattern_highlight = {},
    viewport_buffer = 10,
    disable_warning_message = false
}
